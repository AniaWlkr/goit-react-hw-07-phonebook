{"version":3,"sources":["components/App/App.module.css","components/ContactFilter/ContactFilter.module.css","components/Loader/Loader.module.css","redux/contacts/contacts-actions.js","redux/contacts/contacts-operations.js","components/ContactForm/ContactForm.jsx","redux/contacts/contacts-selectors.js","components/ContactFilter/ContactFilter.jsx","components/Loader/Loader.jsx","components/ContactList/ContactList.jsx","components/App/App.jsx","redux/contacts/contacts-reducer.js","redux/store.js","index.js","components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css"],"names":["module","exports","fetchContactsRequest","createAction","fetchContactsSuccess","fetchContactsError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","changeFilter","axios","defaults","baseURL","contact","dispatch","actions","post","then","data","catch","error","contactId","delete","get","ContactForm","state","name","number","handleChange","event","setState","currentTarget","value","handleSubmit","preventDefault","newContact","props","addContact","onSubmit","this","className","styles","form","label","type","pattern","title","required","onChange","input","button","role","aria-label","icon","Component","connect","operations","getFilter","contacts","filter","getLoading","loading","getFilteredContacts","createSelector","items","toLowerCase","includes","selectors","target","Loader","ldsSpinner","isLoadingContacts","handleDelete","section","length","list","map","item","onClick","id","notification","App","fetchContacts","container","headTitle","createReducer","payload","find","_","combineReducers","middleware","getDefaultMiddleware","store","configureStore","reducer","contactsReducer","devTools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0c07c3e7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__16xz_\",\"headTitle\":\"App_headTitle__1eNzW\",\"title\":\"App_title__1YcTA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"ContactFilter_label__2Us6J\",\"icon\":\"ContactFilter_icon__-aHW7\",\"input\":\"ContactFilter_input__1RqJv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ldsSpinner\":\"Loader_ldsSpinner__2uzs8\"};","import { createAction } from '@reduxjs/toolkit';\n\nexport const fetchContactsRequest = createAction(\n  'contacts/fetchContactsRequest',\n);\nexport const fetchContactsSuccess = createAction(\n  'contacts/fetchContactsSuccess',\n);\nexport const fetchContactsError = createAction('contacts/fetchContactsError');\n\nexport const addContactRequest = createAction('contacts/addContactRequest');\nexport const addContactSuccess = createAction('contacts/addContactSuccess');\nexport const addContactError = createAction('contacts/addContactError');\n\nexport const deleteContactRequest = createAction(\n  'contacts/deleteContactRequest',\n);\nexport const deleteContactSuccess = createAction(\n  'contacts/deleteContactSuccess',\n);\nexport const deleteContactError = createAction('contacts/deleteContactError');\n\nexport const changeFilter = createAction('contacts/changeFilter');\n","import axios from 'axios';\nimport * as actions from './contacts-actions';\n\naxios.defaults.baseURL = 'http://localhost:3004';\n\nconst fetchContacts = () => dispatch => {\n  dispatch(actions.fetchContactsRequest());\n\n  return axios\n    .get('/contacts')\n    .then(({ data }) => dispatch(actions.fetchContactsSuccess(data)))\n    .catch(error => dispatch(actions.fetchContactsError(error)));\n};\n\nconst addContact = contact => dispatch => {\n  dispatch(actions.addContactRequest());\n\n  return axios\n    .post('/contacts', contact)\n    .then(({ data }) => dispatch(actions.addContactSuccess(data)))\n    .catch(error => dispatch(actions.addContactError(error)));\n};\n\nconst deleteContact = contactId => dispatch => {\n  dispatch(actions.deleteContactRequest());\n\n  return axios\n    .delete(`/contacts/${contactId}`)\n    .then(() => dispatch(actions.deleteContactSuccess(contactId)))\n    .catch(error => dispatch(actions.deleteContactError(error)));\n};\n\nexport default { addContact, deleteContact, fetchContacts };\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n// import { v4 } from 'uuid';\nimport styles from './ContactForm.module.css';\nimport operations from '../../redux/contacts/contacts-operations';\n\nclass ContactForm extends Component {\n  static propTypes = {\n    handleSubmit: PropTypes.func,\n  };\n\n  state = {\n    name: '',\n    number: '',\n  };\n\n  handleChange = event => {\n    this.setState({ [event.currentTarget.name]: event.currentTarget.value });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n\n    const newContact = {\n      // id: v4(),\n      name: this.state.name,\n      number: this.state.number,\n    };\n\n    this.props.addContact(newContact);\n    this.setState({ name: '' });\n    this.setState({ number: '' });\n  };\n\n  render() {\n    return (\n      <div>\n        <form onSubmit={this.handleSubmit} className={styles.form}>\n          <label className={styles.label}>\n            Name\n            <input\n              type=\"text\"\n              name=\"name\"\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n              required\n              value={this.state.name}\n              onChange={this.handleChange}\n              className={styles.input}\n            />\n          </label>\n          <label className={styles.label}>\n            Phone number\n            <input\n              type=\"tel\"\n              name=\"number\"\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n              title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n              required\n              value={this.state.number}\n              onChange={this.handleChange}\n              className={styles.input}\n            />\n          </label>\n          <button type=\"submit\" className={styles.button}>\n            Add contact{' '}\n            <span role=\"img\" aria-label=\"green check\" className={styles.icon}>\n              ✅\n            </span>\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    addContact: newContact => dispatch(operations.addContact(newContact)),\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(ContactForm);\n","import { createSelector } from '@reduxjs/toolkit';\n\nconst getLoading = state => state.contacts.loading;\nconst getFilter = state => state.contacts.filter;\nconst getAllContacts = state => state.contacts.items;\n\nconst getFilteredContacts = createSelector(\n  [getAllContacts, getFilter],\n  (items, filter) => {\n    return filter\n      ? items.filter(({ name }) =>\n          name.toLowerCase().includes(filter.toLowerCase()),\n        )\n      : items;\n  },\n);\n\nexport default { getLoading, getFilteredContacts, getFilter };\n","import React from 'react';\nimport styles from './ContactFilter.module.css';\nimport { connect } from 'react-redux';\nimport { changeFilter } from '../../redux/contacts/contacts-actions';\nimport selectors from '../../redux/contacts/contacts-selectors';\n\nconst ContactFilter = ({ value, handleChange }) => {\n  return (\n    <div>\n      <label className={styles.label}>\n        <span role=\"img\" aria-label=\"loupe icon\" className={styles.icon}>\n          🔎\n        </span>\n        Find contacts by name\n        <input\n          className={styles.input}\n          type=\"text\"\n          name=\"filter\"\n          value={value}\n          onChange={handleChange}\n        />\n      </label>\n    </div>\n  );\n};\n\nconst mapStateToProps = state => {\n  return {\n    value: selectors.getFilter(state),\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    handleChange: event => dispatch(changeFilter(event.target.value)),\n  };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactFilter);\n","import React from 'react';\nimport styles from './Loader.module.css';\n\nconst Loader = () => {\n  return (\n    <div className={styles.ldsSpinner}>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n    </div>\n  );\n};\n\nexport default Loader;\n","import PropTypes from 'prop-types';\nimport styles from './ContactList.module.css';\nimport { connect } from 'react-redux';\nimport operations from '../../redux/contacts/contacts-operations';\nimport ContactFilter from '../ContactFilter/ContactFilter';\nimport Loader from '../Loader';\nimport selectors from '../../redux/contacts/contacts-selectors';\n\nconst ContactList = ({ contacts, handleDelete, isLoadingContacts }) => (\n  <div className={styles.section}>\n    <ContactFilter />\n    {isLoadingContacts && <Loader />}\n    {contacts.length ? (\n      <ul className={styles.list}>\n        {contacts.map(contact => (\n          <li key={contact.id} className={styles.item}>\n            {contact.name}: {contact.number}\n            <button\n              type=\"button\"\n              onClick={() => handleDelete(contact.id)}\n              className={styles.button}\n            >\n              Delete{' '}\n              <span role=\"img\" aria-label=\"delete icon\">\n                ❌\n              </span>\n            </button>\n          </li>\n        ))}\n      </ul>\n    ) : (\n      <p className={styles.notification}>\n        <span role=\"img\" aria-label=\"sad face icon\">\n          😔\n        </span>{' '}\n        No name in Phonebook\n      </p>\n    )}\n  </div>\n);\n\nContactList.propTypes = {\n  value: PropTypes.string,\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string,\n      number: PropTypes.string,\n    }),\n  ),\n  handleChange: PropTypes.func,\n  handleDelete: PropTypes.func,\n};\n\nconst mapStateToProps = state => ({\n  contacts: selectors.getFilteredContacts(state),\n  isLoadingContacts: selectors.getLoading(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  handleDelete: contactId => dispatch(operations.deleteContact(contactId)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport styles from './App.module.css';\nimport operations from '../../redux/contacts/contacts-operations';\nimport ContactForm from '../ContactForm';\nimport ContactList from '../ContactList';\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.fetchContacts();\n  }\n\n  render() {\n    return (\n      <div className={styles.container}>\n        <h1 className={styles.headTitle}>Phonebook</h1>\n        <ContactForm />\n        <h2 className={styles.title}>Contacts</h2>\n        <ContactList />\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  fetchContacts: () => dispatch(operations.fetchContacts()),\n});\n\nexport default connect(null, mapDispatchToProps)(App);\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport * as actions from './contacts-actions';\n\nconst {\n  fetchContactsRequest,\n  fetchContactsSuccess,\n  fetchContactsError,\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n  changeFilter,\n} = actions;\n\nconst items = createReducer([], {\n  [fetchContactsSuccess]: (state, { payload }) => payload,\n  [addContactSuccess]: (state, { payload }) =>\n    !state.find(contact => contact.number === payload.number)\n      ? [...state, payload]\n      : state,\n  [deleteContactSuccess]: (state, { payload }) =>\n    state.filter(contact => contact.id !== payload),\n});\n\nconst filter = createReducer('', {\n  [changeFilter]: (_, { payload }) => payload,\n});\n\nconst loading = createReducer(false, {\n  [fetchContactsRequest]: () => true,\n  [fetchContactsSuccess]: () => false,\n  [fetchContactsError]: () => false,\n\n  [addContactRequest]: () => true,\n  [addContactSuccess]: () => false,\n  [addContactError]: () => false,\n\n  [deleteContactRequest]: () => true,\n  [deleteContactSuccess]: () => false,\n  [deleteContactError]: () => false,\n});\n\nexport default combineReducers({\n  items,\n  filter,\n  loading,\n});\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport contactsReducer from './contacts/contacts-reducer';\n\nconst middleware = [...getDefaultMiddleware({})];\n\nconst store = configureStore({\n  reducer: {\n    contacts: contactsReducer,\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport 'modern-normalize/modern-normalize.css';\nimport './styles.css';\nimport App from './components/App/App';\nimport store from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1fuOn\",\"label\":\"ContactForm_label__378f8\",\"input\":\"ContactForm_input__gm87B\",\"icon\":\"ContactForm_icon__1TiGo\",\"button\":\"ContactForm_button__1MLZK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"ContactList_section__3fuU2\",\"button\":\"ContactList_button__1RuFy\",\"input\":\"ContactList_input__3YLqK\",\"list\":\"ContactList_list__2T7aG\",\"item\":\"ContactList_item__3YsZK\",\"notification\":\"ContactList_notification__3Is9a\"};"],"sourceRoot":""}